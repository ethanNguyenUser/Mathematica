(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     70779,       1377]
NotebookOptionsPosition[     68803,       1334]
NotebookOutlinePosition[     69363,       1352]
CellTagsIndexPosition[     69320,       1349]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Plane Wave Visualization", "Title",
 CellChangeTimes->{{3.8946282572354403`*^9, 
  3.894628271479351*^9}},ExpressionUUID->"b9331483-deee-49d5-975d-\
6ad24ed1150c"],

Cell["Given the following wave function:", "Text",
 CellChangeTimes->{{3.894628274407795*^9, 
  3.894628278290593*^9}},ExpressionUUID->"f2e8ec4d-4abe-468b-b99e-\
b365d1794f85"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"x", ",", "t"}], "]"}], "=", 
   RowBox[{"\[Psi]0", " ", 
    SuperscriptBox["E", 
     RowBox[{"\[ImaginaryI]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k1", " ", "x"}], "\[Minus]", 
        RowBox[{"\[Omega]1", " ", "t"}]}], ")"}]}]]}]}], "*)"}]], "Code",
 CellChangeTimes->{{3.894628204543247*^9, 3.894628254768351*^9}, {
  3.894628587956973*^9, 3.894628594916328*^9}, {3.894628707463998*^9, 
  3.894628714124283*^9}},ExpressionUUID->"9c9ff2fb-9d1d-4c5f-9450-\
47c7ce96cafa"],

Cell["What does the wave look like?", "Text",
 CellChangeTimes->{{3.8946282809137163`*^9, 3.894628288195812*^9}, {
  3.8946304453893642`*^9, 
  3.894630447983376*^9}},ExpressionUUID->"98e1aefc-c623-4402-bf37-\
3367048b6399"],

Cell[CellGroupData[{

Cell["Manipulate[]", "Chapter",
 CellChangeTimes->{{3.894630450105134*^9, 
  3.894630456860832*^9}},ExpressionUUID->"bde6f5f4-0449-451f-bd55-\
52a039310ca0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "the", " ", "function"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{
      "x_", ",", " ", "t_", ",", " ", "\[Psi]0_", ",", " ", "k1_", ",", " ", 
       "\[Omega]1_"}], "]"}], " ", ":=", " ", 
     RowBox[{"\[Psi]0", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k1", " ", "x"}], " ", "-", " ", 
          RowBox[{"\[Omega]1", " ", "t"}]}], ")"}]}], "]"}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "parameters"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"k1", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"\[Omega]1", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"t0", " ", "=", " ", "0"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Initial", " ", "time"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "range", " ", "for", " ", "x"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"xRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "the", " ", "function", " ", "in", " ", "3", "D"}], 
    " ", "*)"}], "\n", 
   RowBox[{"Manipulate", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"Plot3D", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{
           "x", ",", " ", "t0", ",", " ", "\[Psi]0", ",", " ", "k1", ",", " ",
             "\[Omega]1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{
           "x", ",", " ", "t0", ",", " ", "\[Psi]0", ",", " ", "k1", ",", " ",
             "\[Omega]1"}], "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"xRange", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"xRange", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "0", ",", " ", "\[Psi]0"}], "}"}], ",", "\n", 
       "    ", 
       RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", "\n", "    ", 
       RowBox[{"AxesLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", " ", "\"\<Real[\[Psi]]\>\"", ",", " ", 
          "\"\<Imaginary[\[Psi]]\>\""}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotLegends", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Real[\[Psi]]\>\"", ",", " ", "\"\<Imaginary[\[Psi]]\>\""}], 
         "}"}]}]}], "\n", "  ", "]"}], ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"t0", ",", " ", "0", ",", " ", "10", ",", " ", "0.1"}], "}"}]}],
     " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Slider", " ", "for", " ", "varying", " ", "t0"}], " ", "*)"}], 
    "\n", "]"}], "\n"}]}]], "Code",
 CellChangeTimes->{{3.894628290424449*^9, 3.894628300931975*^9}, {
   3.894628337649846*^9, 3.8946283891883783`*^9}, 3.8946285622943783`*^9, 
   3.894628668823557*^9, 3.8946292038216667`*^9, 3.894629409502397*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"d8ca2038-6d85-4012-aa3c-2d2f9fd7311f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t0$$ = 2.3000000000000003`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t0$$], 0, 10, 0.1}}, Typeset`size$$ = {
    588., {178., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t0$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         Re[
          $CellContext`\[Psi][$CellContext`x, $CellContext`t0$$, \
$CellContext`\[Psi]0, $CellContext`k1, $CellContext`\[Omega]1]], 
         Im[
          $CellContext`\[Psi][$CellContext`x, $CellContext`t0$$, \
$CellContext`\[Psi]0, $CellContext`k1, $CellContext`\[Omega]1]]}, \
{$CellContext`x, 
         Part[$CellContext`xRange, 1], 
         Part[$CellContext`xRange, 2]}, {$CellContext`y, 
         0, $CellContext`\[Psi]0}, PlotRange -> All, 
        AxesLabel -> {"x", "Real[\[Psi]]", "Imaginary[\[Psi]]"}, 
        PlotLegends -> {"Real[\[Psi]]", "Imaginary[\[Psi]]"}], 
      "Specifications" :> {{$CellContext`t0$$, 0, 10, 0.1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{642., {234., 241.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8946283019474707`*^9, {3.89462837971516*^9, 3.89462838938492*^9}, 
   3.8946285689752913`*^9, {3.894628605069151*^9, 3.8946286051046867`*^9}, 
   3.894628669963811*^9, 3.894629204686141*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"1dc199ee-9c3d-4119-befc-936b948a6b4a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Animate[]", "Chapter",
 CellChangeTimes->{{3.894630462677314*^9, 
  3.89463048907303*^9}},ExpressionUUID->"3c11648f-c215-4705-b4b7-\
bf85bf53cdad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "the", " ", "function"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{
      "x_", ",", " ", "t_", ",", " ", "\[Psi]0_", ",", " ", "k1_", ",", " ", 
       "\[Omega]1_"}], "]"}], " ", ":=", " ", 
     RowBox[{"\[Psi]0", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k1", " ", "x"}], " ", "-", " ", 
          RowBox[{"\[Omega]1", " ", "t"}]}], ")"}]}], "]"}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "parameters"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"k1", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"\[Omega]1", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"tRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "10"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Time", " ", "range"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "range", " ", "for", " ", "x"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"xRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Animate", " ", "the", " ", "function"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"Animate", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"Plot3D", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{
           "x", ",", " ", "t", ",", " ", "\[Psi]0", ",", " ", "k1", ",", " ", 
            "\[Omega]1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{
           "x", ",", " ", "t", ",", " ", "\[Psi]0", ",", " ", "k1", ",", " ", 
            "\[Omega]1"}], "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"xRange", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"xRange", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "0", ",", " ", "\[Psi]0"}], "}"}], ",", "\n", 
       "    ", 
       RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", "\n", "    ", 
       RowBox[{"AxesLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", " ", "\"\<Real[\[Psi]]\>\"", ",", " ", 
          "\"\<Imaginary[\[Psi]]\>\""}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotLegends", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Real[\[Psi]]\>\"", ",", " ", "\"\<Imaginary[\[Psi]]\>\""}], 
         "}"}]}]}], "\n", "  ", "]"}], ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"tRange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"tRange", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", "0.1"}], "}"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Animation", " ", "control", " ", "for", " ", "t0"}], " ", 
     "*)"}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.894629308968893*^9, 3.894629326512597*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5ba22f6d-112c-4fe5-b319-ea421fbf0b99"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 8.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10, 0.1}}, Typeset`size$$ = {
    588., {178., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         Re[
          $CellContext`\[Psi][$CellContext`x, $CellContext`t$$, $CellContext`\
\[Psi]0, $CellContext`k1, $CellContext`\[Omega]1]], 
         Im[
          $CellContext`\[Psi][$CellContext`x, $CellContext`t$$, $CellContext`\
\[Psi]0, $CellContext`k1, $CellContext`\[Omega]1]]}, {$CellContext`x, 
         Part[$CellContext`xRange, 1], 
         Part[$CellContext`xRange, 2]}, {$CellContext`y, 
         0, $CellContext`\[Psi]0}, PlotRange -> All, 
        AxesLabel -> {"x", "Real[\[Psi]]", "Imaginary[\[Psi]]"}, 
        PlotLegends -> {"Real[\[Psi]]", "Imaginary[\[Psi]]"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 0.1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{642., {220., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.894629309892256*^9, 3.89462932723173*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"decd4ef7-079d-4a43-8703-32c98d4e6eac"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Animation", "Chapter",
 CellChangeTimes->{{3.894630483471962*^9, 
  3.894630484213601*^9}},ExpressionUUID->"67e3c26f-8784-4d1f-8222-\
cfdfc2396b03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "the", " ", "function"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{
      "x_", ",", " ", "t_", ",", " ", "\[Psi]0_", ",", " ", "k1_", ",", " ", 
       "\[Omega]1_"}], "]"}], " ", ":=", " ", 
     RowBox[{"\[Psi]0", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k1", " ", "x"}], " ", "-", " ", 
          RowBox[{"\[Omega]1", " ", "t"}]}], ")"}]}], "]"}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "parameters"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"k1", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"\[Omega]1", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sample", " ", "value"}], ",", " ", 
     RowBox[{"replace", " ", "with", " ", "your", " ", "own"}]}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"tRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "10"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Time", " ", "range"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "range", " ", "for", " ", "x"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"xRange", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "the", " ", "time", " ", "step", " ", "for", " ", "capturing",
      " ", "screenshots"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"timeStep", " ", "=", " ", "0.1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Adjust", " ", "as", " ", "needed"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Create", " ", "a", " ", "list", " ", "to", " ", "store", " ", "the", " ",
      "screenshots"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"screenshots", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Generate", " ", "the", " ", "screenshots"}], " ", "*)"}], "\n", 
   RowBox[{"Do", "[", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"currentPlot", " ", "=", " ", 
       RowBox[{"Plot3D", "[", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"\[Psi]", "[", 
             RowBox[{
             "x", ",", " ", "t", ",", " ", "\[Psi]0", ",", " ", "k1", ",", 
              " ", "\[Omega]1"}], "]"}], "]"}], ",", " ", 
           RowBox[{"Im", "[", 
            RowBox[{"\[Psi]", "[", 
             RowBox[{
             "x", ",", " ", "t", ",", " ", "\[Psi]0", ",", " ", "k1", ",", 
              " ", "\[Omega]1"}], "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"xRange", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"xRange", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "0", ",", " ", "\[Psi]0"}], "}"}], ",", "\n",
          "    ", 
         RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", "\n", "    ", 
         RowBox[{"AxesLabel", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<Real[\[Psi]]\>\"", ",", " ", 
            "\"\<Imaginary[\[Psi]]\>\""}], "}"}]}], ",", "\n", "    ", 
         RowBox[{"PlotLegends", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Real[\[Psi]]\>\"", ",", " ", "\"\<Imaginary[\[Psi]]\>\""}], 
           "}"}]}]}], "\n", "  ", "]"}]}], ";", "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"screenshots", ",", " ", "currentPlot"}], "]"}]}], ",", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"tRange", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"tRange", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", "timeStep"}], "}"}]}], "\n",
     "]"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Export", " ", "the", " ", "screenshots", " ", "as", " ", "a", " ", 
     "video"}], " ", "*)"}], "\n", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<output.mp4\>\"", ",", " ", "screenshots"}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8946294295978518`*^9, 3.8946294304857817`*^9}, {
  3.894629572239059*^9, 3.894629576420755*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"5b6ab8ad-662a-4490-b783-8bf570482be1"],

Cell[BoxData["\<\"output.mp4\"\>"], "Output",
 CellChangeTimes->{3.8946294592196712`*^9, 3.894630323929154*^9, 
  3.894630394713675*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"7011806a-ca6f-4f16-b7d9-6c7c8fa9d240"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[<|"opts" -> Sequence[
     RowBox[{"AudioOutputDevice", "\[Rule]", "Automatic"}]], "resourcePath" -> 
   "/Users/ethan/Desktop/output.mp4", "appearance" -> "Basic", "position" -> 
   3.266666, "currentVideoTrack" -> 1, "currentAudioTrack" -> 0, 
   "currentSubtitleTrack" -> 0, "volume" -> 1, "audioDevice" -> Automatic, 
   "currentRasterSize" -> {703, 437}, "imageSizeOption" -> Automatic, 
   "cachedFrame" -> ByteArray[CompressedData["
1:eJzsuwVQXM/bLjgEggQLGhwCBAgW3AcJwYO7y6DB3RmcoIO7u7s7wV2Du7vb
oMvv//2/u7VVu1W7e7+7t7bq9qln+p0575yZZ053v8/b3fPZwFrBAAYAAIBi
AYDX+dd1wEdJUQlRAAwMDED87QC8bgBmRFzMjAEACQlaAOKb5xtgkAD/vKfj
3Zv5b7vu7YEA5v2/bKs3EP7bdnoDzb993twBzDDvAGxvtdcbWN5sgre6+g20
v//DB/r6+vpW/fPR/3r+n7WwnZG+g5EhmbOZgymZg6kRmaq1hbGdviXZT30r
E0d9EyMyHjJnZ2dG5/94mRFkbQlgYWJh5WHi4GFiJmNm4mHj5mFlZmDi5GFi
ArwuAYQBiPDwCPDvEREQEJCQED+gYKOiICOj4GNioWMTE5CSEBMQEZFRMlKT
kdNTEBHRcH6lZ2JmY2MjpeYGcrHwMbKysfxzERgkJCQUZBQ8VFQ8ls9En1n+
H5fXTgAGIkzduw5YGHLAOwwYWAyY1x4A6Rvp9zD/KoB/F5h3sHDv4REQkT4g
vznUfQS8g4GFfQcH+/49HNzbWc+38wA4jPeYn5mF4LHk9RHIbbFZfKKyECm+
V3XhKEyeU7Ia2PkifcD9hIdP8IWKmuYrLRs7BycXN4/wDxFRMXEJSUUlZRVV
NXUNkKGRsYmp2S97B0cnZxdXNz//gMCg38Eh0TGxcfEJiUnJ2Tm5efkFhUXF
1TW1dfUNjU3Nf7p7evv6BwaHpqZn/s7OzS8sbmxube/s7u0fHF5cXl3f3N7d
Qx/+4QUDgIX5z/J/ygvjjdc7ODhYOIR/eMG8c/7HAQPu/WdmeEwheQR9Wyxy
Fh9E7O9RWVVdSBSsCuc4BnaTH3Ap2Ta+XPxD7V/M/u8R8/1/xey/EfvfeS0C
UGBh3m4eLAZAAHD3QJPt/eF/4X/hvwifPzntni8Ebz3KQUaZTgn/mBBWzeFv
sRO/5IHyNNhXc1ytzaxyYekv4eRkhWKW54hzTGcXBXrNz77sxWuGE1Olm20z
XnKmdlNmCAIAeoD3pkdZpP0vOBLVIAyd5ncuV+/IiNxOzAQ0AAeZ6YQlLqcM
OxGmhnKDlBb4aiT+GF04X+y84OSJdMhCMFGzzZ3J18yGAnilYI4pWVBU1QXf
Y8v//wI4gRm/2FmLEMWWCDBgEqj51Qy6PHmizfnBH0wbCAw17BcMFvE1TH3F
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
AmyD0sc=
     "]], 
   "properties" -> <|
    "duration" -> 6.733, 
     "trackDescriptors" -> <|
      "Video" -> {1 -> "Track 1"}, "Audio" -> {}, "Subtitle" -> {}|>, 
     "originalRasterSizes" -> {{1176, 730}}, "rasterSizeOption" -> Automatic, 
     "fileSize" -> 3209592|>, "version" -> 2, "form" -> StandardForm|>,
  "VideoBox2",
  Editable->False,
  Selectable->False]], "Input",ExpressionUUID->"e4b799d9-b6e3-4695-a96c-\
3df52b2e7876"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 872},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "ethan", 
   "Library", "Mathematica", "SystemFiles", "FrontEnd", "StyleSheets"}, 
  "DraculaFixed.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"6468ff1b-9551-4ffa-97ba-87e58438ff25"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 123, "Title",ExpressionUUID->"b9331483-deee-49d5-975d-6ad24ed1150c"],
Cell[752, 27, 176, 3, 44, "Text",ExpressionUUID->"f2e8ec4d-4abe-468b-b99e-b365d1794f85"],
Cell[931, 32, 571, 15, 69, "Code",ExpressionUUID->"9c9ff2fb-9d1d-4c5f-9450-47c7ce96cafa"],
Cell[1505, 49, 224, 4, 44, "Text",ExpressionUUID->"98e1aefc-c623-4402-bf37-3367048b6399"],
Cell[CellGroupData[{
Cell[1754, 57, 157, 3, 86, "Chapter",ExpressionUUID->"bde6f5f4-0449-451f-bd55-52a039310ca0"],
Cell[CellGroupData[{
Cell[1936, 64, 3987, 102, 742, "Code",ExpressionUUID->"d8ca2038-6d85-4012-aa3c-2d2f9fd7311f"],
Cell[5926, 168, 2327, 47, 498, "Output",ExpressionUUID->"1dc199ee-9c3d-4119-befc-936b948a6b4a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8302, 221, 153, 3, 71, "Chapter",ExpressionUUID->"3c11648f-c215-4705-b4b7-bf85bf53cdad"],
Cell[CellGroupData[{
Cell[8480, 228, 3998, 104, 742, "Code",ExpressionUUID->"5ba22f6d-112c-4fe5-b319-ea421fbf0b99"],
Cell[12481, 334, 2483, 49, 470, "Output",ExpressionUUID->"decd4ef7-079d-4a43-8703-32c98d4e6eac"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15013, 389, 154, 3, 71, "Chapter",ExpressionUUID->"67e3c26f-8784-4d1f-8222-cfdfc2396b03"],
Cell[CellGroupData[{
Cell[15192, 396, 5042, 130, 994, "Code",ExpressionUUID->"5b6ab8ad-662a-4490-b783-8bf570482be1"],
Cell[20237, 528, 215, 3, 42, "Output",ExpressionUUID->"7011806a-ca6f-4f16-b7d9-6c7c8fa9d240"]
}, Open  ]],
Cell[20467, 534, 48308, 796, 627, "Input",ExpressionUUID->"e4b799d9-b6e3-4695-a96c-3df52b2e7876"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

